# Vulnerability Scanning on Repo
on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
        description: The Name of the app being checked
        default: test
      working-directory:
        required: false
        default: .
        type: string
      PACKAGE_DIRECTORY:
        required: false
        default: .
        type: string

env:
  BOM_FILE_NAME: "${{ inputs.APP_NAME }}${{ inputs.PACKAGE_DIRECTORY != '.' && inputs.PACKAGE_DIRECTORY || '' }}.sbom.json"

jobs:
  generate_bom:
    defaults:
      run:
        working-directory: ./${{ inputs.PACKAGE_DIRECTORY }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4.2.1
      - name: Get version from package.json
        uses: martinbeentjes/npm-get-version-action@main
        id: package-version
      - name: Setup Node
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 20
      - name: Get node version
        id: node
        run: |
          echo "version=$(node -v)" >> $GITHUB_OUTPUT
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache node modules
        uses: actions/cache@v4.1.1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}
      - run: LOCAL_MACHINE=false yarn install --frozen-lockfile --network-concurrency 1
      - run: yarn global add @cyclonedx/cyclonedx-npm
      # RE: --ignore-npm-errors below: See https://github.com/CycloneDX/cyclonedx-node-npm/issues/810#issuecomment-1594252293
      - run: cyclonedx-npm --ignore-npm-errors --output-file ./${{ env.BOM_FILE_NAME }}
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ github.run_number }}${{ inputs.PACKAGE_DIRECTORY != '.' && format('.{0}', inputs.PACKAGE_DIRECTORY) || '' }}.sbom.json
          path: ${{ inputs.PACKAGE_DIRECTORY }}/${{ env.BOM_FILE_NAME }}
  run_vulnerability_scanner:
    needs:
      - generate_bom
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact       
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ github.run_number }}${{ inputs.PACKAGE_DIRECTORY != '.' && format('.{0}', inputs.PACKAGE_DIRECTORY) || '' }}.sbom.json
      - name: Trivy Cache
        id: trivy-cache
        uses: yogeshlonkar/trivy-cache-action@v0.1.8
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          prefix: ${{ github.repository_id }}
      - name: Scan SBOM, report as table file
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: '0' # always pass
          scan-type: 'sbom'
          scan-ref: ${{ inputs.working-directory }}/${{ env.BOM_FILE_NAME }} # Need; See /aquasecurity/trivy-action/pull/314
          scanners: 'vuln'
          format: 'table'
          output: trivy-sbom-vuln-report.txt
          cache-dir: .trivy
      - run: cat trivy-sbom-vuln-report.txt
      - name: Attach trivy-sbom-vuln-report.txt to release
        uses: softprops/action-gh-release@v2.0.8
        continue-on-error: true # In some contexts the file is not created (expected)
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            trivy-sbom-vuln-report.txt
      - name: Scan SBOM, report as json file
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: '0' # always pass
          scan-type: 'sbom'
          scan-ref: ${{ inputs.working-directory }}/${{ env.BOM_FILE_NAME }} # Need; See /aquasecurity/trivy-action/pull/314
          scanners: 'vuln'
          output: trivy-sbom-vuln-report.json
          format: json
          cache-dir: .trivy
      - name: Attach trivy-sbom-vuln-report.json to release
        uses: softprops/action-gh-release@v2.0.8
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            trivy-sbom-vuln-report.json
  report_high_risk_vulnerability_scanner:
    needs:
      - generate_bom
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact       
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ github.run_number }}${{ inputs.PACKAGE_DIRECTORY != '.' && format('.{0}', inputs.PACKAGE_DIRECTORY) || '' }}.sbom.json
      - name: Trivy Cache
        id: trivy-cache
        uses: yogeshlonkar/trivy-cache-action@v0.1.8
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          prefix: ${{ github.repository_id }}
      - name: Test SBOM (HIGH,CRITICAL)
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: '0' # Don't kill, this run is just output
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          scan-ref: ${{ inputs.working-directory }}/${{ env.BOM_FILE_NAME }} # Need; See /aquasecurity/trivy-action/pull/314
          scan-type: 'sbom'
          scanners: 'vuln'
          format: 'table'
          output: trivy-sbom-HIGH-CRITICAL-vuln-report.txt
          cache-dir: .trivy
      - run: cat trivy-sbom-HIGH-CRITICAL-vuln-report.txt
      - name: Release sbom
        uses: softprops/action-gh-release@v2.0.8
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ inputs.working-directory }}/${{ env.BOM_FILE_NAME }}
  test_high_risk_vulnerability_scanner:
    needs:
      - generate_bom
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact       
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ github.run_number }}${{ inputs.PACKAGE_DIRECTORY != '.' && format('.{0}', inputs.PACKAGE_DIRECTORY) || '' }}.sbom.json
      - name: Trivy Cache
        id: trivy-cache
        uses: yogeshlonkar/trivy-cache-action@v0.1.8
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          prefix: ${{ github.repository_id }}
      - name: Test SBOM (HIGH,CRITICAL)
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: '1' # Kill job if fail
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          scan-ref: ${{ inputs.working-directory }}/${{ env.BOM_FILE_NAME }} # Need; See /aquasecurity/trivy-action/pull/314
          scan-type: 'sbom'
          scanners: 'vuln'
          format: 'table'
          output: trivy-sbom-HIGH-CRITICAL-vuln-report.txt
          cache-dir: .trivy
