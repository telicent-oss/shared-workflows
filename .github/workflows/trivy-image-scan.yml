name: Scan Container Image with Trivy

on:
  workflow_call:
    inputs:
      SCAN_NAME:
        type: string
        description: |
          A developer friendly name for the image to differentiate scan reports where a repository is
          building multiple images.
      IMAGE_REF:
        type: string
        description: |
          Specifies the full image reference (repository, name and tag) for an image you wish to scan.
        required: true
      PATH_TO_TRIVY_IGNORES_ONLY_FOR_BUILD_IMAGE:
        required: false
        type: string
        description: Only allowed for BUILD image, MUST NOT be used with DEPLOY image. Full relative path to trivy ignore file.
      IMAGE_FROM_ARTIFACT:
        required: false
        default: false
        type: boolean
        description: |
          Scan a Docker image tar stored as an artifact (name must be ${SCAN_NAME}.tar), rather
          than an image stored in a remote repository
      REMOTE_VEX:
        required: false
        type: string
        description: |
          Supplies references to one/more repositories from which additional VEX statements should be obtained and used
          to filter out vulnerabilities that have been assessed as to not apply to our software products.

          Note that telicent-oss/telicent-base-images is always included by default so this is only needed if the image
          being built relies on other images/libraries for which VEX statements are required.
      SECURITY_ISSUES_BLOCK_ONLY_IF_FIX_AVAILABLE:
        required: false
        default: false
        type: boolean
        description: |
          Sets ignore-unfixed flag
      USES_JAVA:
        required: false
        default: false
        type: boolean
        description: |
          Indicates whether the image includes Java artifacts, we need to know this in order to determine which Trivy
          vulnerability databases to obtain.
          
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Login to Docker Hub
        uses: docker/login-action@v3.5.0
        if: ${{ !inputs.IMAGE_FROM_ARTIFACT }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download image artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.IMAGE_FROM_ARTIFACT }}
        with:
          name: ${{ inputs.SCAN_NAME }}.tar
          path: .

      - name: Load docker image for dry run scans
        if: ${{ inputs.IMAGE_FROM_ARTIFACT }}
        run: docker load --input ${{ inputs.SCAN_NAME }}.tar

      - name: Trivy Vulnerability Scanning
        id: trivy-scan
        uses: telicent-oss/trivy-action@v1
        env:
          TRIVY_IGNOREFILE: ${{ inputs.PATH_TO_TRIVY_IGNORES_ONLY_FOR_BUILD_IMAGE }}
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          scan-type: image
          scan-name: docker-${{ inputs.SCAN_NAME }}
          scan-ref: ${{ inputs.IMAGE_REF }}
          uses-java: ${{ inputs.USES_JAVA }}
          allow-unfixed: ${{ inputs.SECURITY_ISSUES_BLOCK_ONLY_IF_FIX_AVAILABLE }}
          remote-vex: |
            telicent-oss/telicent-base-images
            ${{ inputs.REMOTE_VEX }}
          output-sbom: ${{ startsWith(github.ref, 'refs/tags/') && 'release' || '' }}

      - name: Release SBOM for image (IF has tags for release)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2.4.1
        with:
          files: |
            ${{ runner.temp }}/${{ steps.trivy-scan.outputs.sbom-file }}

      - name: Release report on docker sbom (IF has tags for release)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2.4.1
        with:
          files: |
            ${{ steps.trivy-scan.outputs.scan-results-file }}
