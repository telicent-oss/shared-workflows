name: Downloads an artifact of a given name and scan the SBOM

on:
  workflow_call:
    inputs:
      SCAN_NAME:
        type: string
        description: |
          The name of the scan to download the artifact of to scan
        required: true
      SECURITY_ISSUES_BLOCK_ONLY_IF_FIX_AVAILABLE:
        required: false
        default: false
        type: boolean
        description: |
          Sets --only-fixed flag

jobs:
  scan-sbom-for-high-crit:
    name: Scan SBOM for HIGH and CRITICAL
    runs-on: ubuntu-latest
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ inputs.SCAN_NAME }}

      - name: Trivy Cache
        id: trivy-cache
        uses: yogeshlonkar/trivy-cache-action@v0.1.8
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          prefix: ${{ github.repository_id }}

      - name: Download Trivy Vulnerability DB
        if: ${{ steps.trivy-cache.outputs.cache-hit == '' || steps.trivy-cache.outputs.cache-hit == 'false' }}
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DOWNLOAD_DB_ONLY: true
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db,ghcr.io/aquasecurity/trivy-db:2
          TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          scan-type: sbom
          timeout: 10m0s
          cache-dir: .trivy
          cache: false

      - name: Trivy Scan for HIGH and CRITICAL vulnerabilities
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          exit-code: '1'
          format: 'table'
          severity: 'HIGH,CRITICAL'
          scan-ref: ${{ inputs.SCAN_NAME }}-bom.json
          scan-type: 'sbom'
          scanners: 'vuln'
          cache-dir: .trivy
          cache: false
          ignore-unfixed: ${{ inputs.SECURITY_ISSUES_BLOCK_ONLY_IF_FIX_AVAILABLE }}

      - name: Anchore Scan for HIGH and CRITICAL vulnerabilities
        id: anchore-scan
        uses: anchore/scan-action@v6.2.0
        with:
          sbom: ${{ inputs.SCAN_NAME }}-bom.json
          fail-build: true
          severity-cutoff: high
          output-format: sarif
          only-fixed: ${{ inputs.SECURITY_ISSUES_BLOCK_ONLY_IF_FIX_AVAILABLE }}

      - name: Inspect Anchore SARIF Report
        if: always()
        run: cat ${{ steps.anchore-scan.outputs.sarif }}

  scan-and-store-full-report:
    name: Scan for all vulnerabilities and store the report
    runs-on: ubuntu-latest
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ inputs.SCAN_NAME }}

      - name: Trivy Cache
        id: trivy-cache
        uses: yogeshlonkar/trivy-cache-action@v0.1.8
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          prefix: ${{ github.repository_id }}

      - name: Download Trivy Vulnerability DB
        if: ${{ steps.trivy-cache.outputs.cache-hit == '' || steps.trivy-cache.outputs.cache-hit == 'false' }}
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DOWNLOAD_DB_ONLY: true
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db,ghcr.io/aquasecurity/trivy-db:2
          TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          scan-type: sbom
          timeout: 10m0s
          cache-dir: .trivy
          cache: false

      - name: Trivy Full Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true
        with:
          scan-type: 'sbom'
          scan-ref: ${{ inputs.SCAN_NAME }}-bom.json
          output: ${{ inputs.SCAN_NAME }}-trivy-scan-report.json
          format: 'json'
          exit-code: '0'
          cache-dir: .trivy
          cache: false

      - name: Anchore Full Vulnerability Scan
        id: anchore-full-scan
        uses: anchore/scan-action@v6.2.0
        with:
          sbom: ${{ inputs.SCAN_NAME }}-bom.json
          fail-build: true
          severity-cutoff: high
          output-format: sarif

      - name: Inspect Anchore Full SARIF Report
        if: always()
        run: cat ${{ steps.anchore-full-scan.outputs.sarif }}

      - name: Upload Trivy Vulnerability Scan Results
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ inputs.SCAN_NAME }}-trivy-report
          path: ${{ inputs.SCAN_NAME }}-trivy-scan-report.json
          retention-days: 30

      - name: Upload Anchore Vulnerability Scan SARIF Report
        if: always()
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ inputs.SCAN_NAME }}-anchore-report
          path: ${{ steps.anchore-full-scan.outputs.sarif }}
          retention-days: 30
