name: Build Python Release

on:
  workflow_call:
    inputs:
      PACKAGE:
        required: true
        type: string
        description: The package to store the generated SBOM in
      VERSION:
        required: true
        type: string
    outputs:
      application-sbom-artifact-name:
        value: ${{ jobs.generate-application-sbom.outputs.artifact-name }}

jobs:

  generate-application-sbom:
    name: Generate Application SBOM
    uses: telicent-oss/shared-workflows/.github/workflows/python-generate-application-sbom.yml@main
    with:
      SCAN_NAME: ${{ inputs.PACKAGE }}-${{ inputs.VERSION }}

  scan-application-sbom:
    name: Scan Application SBOM
    needs:
      - generate-application-sbom
    uses: telicent-oss/shared-workflows/.github/workflows/python-scan-sbom.yml@main
    with:
      SCAN_NAME: ${{ needs.generate-application-sbom.outputs.artifact-name }}

  build:
    name: Build Release Distribution
    runs-on: ubuntu-latest
    needs:
    - generate-application-sbom
    - scan-application-sbom

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user

    - name: Download SBOM
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.generate-application-sbom.outputs.artifact-name }}

    - name: Place SBOM in pkg
      run: |
        mv ${{ needs.generate-application-sbom.outputs.artifact-name }}-bom.json ${{ inputs.PACKAGE }}/sbom.json

    - name: Build a binary wheel and a source tarball
      run: python3 -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: ${{ needs.generate-application-sbom.outputs.artifact-name }}-dist
        path: dist/
